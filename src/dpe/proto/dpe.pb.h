// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dpe.proto

#ifndef PROTOBUF_dpe_2eproto__INCLUDED
#define PROTOBUF_dpe_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace dpe {
class ComputeRequest;
class ComputeRequestDefaultTypeInternal;
extern ComputeRequestDefaultTypeInternal _ComputeRequest_default_instance_;
class ConnectRequest;
class ConnectRequestDefaultTypeInternal;
extern ConnectRequestDefaultTypeInternal _ConnectRequest_default_instance_;
class ConnectResponse;
class ConnectResponseDefaultTypeInternal;
extern ConnectResponseDefaultTypeInternal _ConnectResponse_default_instance_;
class DisconnectRequest;
class DisconnectRequestDefaultTypeInternal;
extern DisconnectRequestDefaultTypeInternal _DisconnectRequest_default_instance_;
class FinishComputeRequest;
class FinishComputeRequestDefaultTypeInternal;
extern FinishComputeRequestDefaultTypeInternal _FinishComputeRequest_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class UpdateWorkerStatusRequest;
class UpdateWorkerStatusRequestDefaultTypeInternal;
extern UpdateWorkerStatusRequestDefaultTypeInternal _UpdateWorkerStatusRequest_default_instance_;
class Variant;
class VariantDefaultTypeInternal;
extern VariantDefaultTypeInternal _Variant_default_instance_;
class Variants;
class VariantsDefaultTypeInternal;
extern VariantsDefaultTypeInternal _Variants_default_instance_;
}  // namespace dpe

namespace dpe {

namespace protobuf_dpe_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_dpe_2eproto

// ===================================================================

class Variant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dpe.Variant) */ {
 public:
  Variant();
  virtual ~Variant();

  Variant(const Variant& from);

  inline Variant& operator=(const Variant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Variant& default_instance();

  enum ValueCase {
    kValueInt64 = 1,
    kValueString = 2,
    VALUE_NOT_SET = 0,
  };

  static inline const Variant* internal_default_instance() {
    return reinterpret_cast<const Variant*>(
               &_Variant_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Variant* other);

  // implements Message ----------------------------------------------

  inline Variant* New() const PROTOBUF_FINAL { return New(NULL); }

  Variant* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Variant& from);
  void MergeFrom(const Variant& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Variant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 value_int64 = 1;
  bool has_value_int64() const;
  void clear_value_int64();
  static const int kValueInt64FieldNumber = 1;
  ::google::protobuf::int64 value_int64() const;
  void set_value_int64(::google::protobuf::int64 value);

  // optional string value_string = 2;
  bool has_value_string() const;
  void clear_value_string();
  static const int kValueStringFieldNumber = 2;
  const ::std::string& value_string() const;
  void set_value_string(const ::std::string& value);
  #if LANG_CXX11
  void set_value_string(::std::string&& value);
  #endif
  void set_value_string(const char* value);
  void set_value_string(const char* value, size_t size);
  ::std::string* mutable_value_string();
  ::std::string* release_value_string();
  void set_allocated_value_string(::std::string* value_string);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:dpe.Variant)
 private:
  void set_has_value_int64();
  void set_has_value_string();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::int64 value_int64_;
    ::google::protobuf::internal::ArenaStringPtr value_string_;
  } value_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_dpe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Variants : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dpe.Variants) */ {
 public:
  Variants();
  virtual ~Variants();

  Variants(const Variants& from);

  inline Variants& operator=(const Variants& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Variants& default_instance();

  static inline const Variants* internal_default_instance() {
    return reinterpret_cast<const Variants*>(
               &_Variants_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Variants* other);

  // implements Message ----------------------------------------------

  inline Variants* New() const PROTOBUF_FINAL { return New(NULL); }

  Variants* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Variants& from);
  void MergeFrom(const Variants& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Variants* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dpe.Variant element = 1;
  int element_size() const;
  void clear_element();
  static const int kElementFieldNumber = 1;
  const ::dpe::Variant& element(int index) const;
  ::dpe::Variant* mutable_element(int index);
  ::dpe::Variant* add_element();
  ::google::protobuf::RepeatedPtrField< ::dpe::Variant >*
      mutable_element();
  const ::google::protobuf::RepeatedPtrField< ::dpe::Variant >&
      element() const;

  // @@protoc_insertion_point(class_scope:dpe.Variants)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dpe::Variant > element_;
  friend struct protobuf_dpe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConnectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dpe.ConnectRequest) */ {
 public:
  ConnectRequest();
  virtual ~ConnectRequest();

  ConnectRequest(const ConnectRequest& from);

  inline ConnectRequest& operator=(const ConnectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectRequest& default_instance();

  static inline const ConnectRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectRequest*>(
               &_ConnectRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ConnectRequest* other);

  // implements Message ----------------------------------------------

  inline ConnectRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ConnectRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConnectRequest& from);
  void MergeFrom(const ConnectRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConnectRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:dpe.ConnectRequest)
 private:
  void set_has_address();
  void clear_has_address();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  friend struct protobuf_dpe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConnectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dpe.ConnectResponse) */ {
 public:
  ConnectResponse();
  virtual ~ConnectResponse();

  ConnectResponse(const ConnectResponse& from);

  inline ConnectResponse& operator=(const ConnectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectResponse& default_instance();

  static inline const ConnectResponse* internal_default_instance() {
    return reinterpret_cast<const ConnectResponse*>(
               &_ConnectResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ConnectResponse* other);

  // implements Message ----------------------------------------------

  inline ConnectResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ConnectResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConnectResponse& from);
  void MergeFrom(const ConnectResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConnectResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 connection_id = 1;
  bool has_connection_id() const;
  void clear_connection_id();
  static const int kConnectionIdFieldNumber = 1;
  ::google::protobuf::int64 connection_id() const;
  void set_connection_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:dpe.ConnectResponse)
 private:
  void set_has_connection_id();
  void clear_has_connection_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 connection_id_;
  friend struct protobuf_dpe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisconnectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dpe.DisconnectRequest) */ {
 public:
  DisconnectRequest();
  virtual ~DisconnectRequest();

  DisconnectRequest(const DisconnectRequest& from);

  inline DisconnectRequest& operator=(const DisconnectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisconnectRequest& default_instance();

  static inline const DisconnectRequest* internal_default_instance() {
    return reinterpret_cast<const DisconnectRequest*>(
               &_DisconnectRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(DisconnectRequest* other);

  // implements Message ----------------------------------------------

  inline DisconnectRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DisconnectRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DisconnectRequest& from);
  void MergeFrom(const DisconnectRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DisconnectRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:dpe.DisconnectRequest)
 private:
  void set_has_address();
  void clear_has_address();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  friend struct protobuf_dpe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComputeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dpe.ComputeRequest) */ {
 public:
  ComputeRequest();
  virtual ~ComputeRequest();

  ComputeRequest(const ComputeRequest& from);

  inline ComputeRequest& operator=(const ComputeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComputeRequest& default_instance();

  static inline const ComputeRequest* internal_default_instance() {
    return reinterpret_cast<const ComputeRequest*>(
               &_ComputeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ComputeRequest* other);

  // implements Message ----------------------------------------------

  inline ComputeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ComputeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComputeRequest& from);
  void MergeFrom(const ComputeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComputeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 task_id = 1;
  bool has_task_id() const;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::int64 task_id() const;
  void set_task_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:dpe.ComputeRequest)
 private:
  void set_has_task_id();
  void clear_has_task_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 task_id_;
  friend struct protobuf_dpe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FinishComputeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dpe.FinishComputeRequest) */ {
 public:
  FinishComputeRequest();
  virtual ~FinishComputeRequest();

  FinishComputeRequest(const FinishComputeRequest& from);

  inline FinishComputeRequest& operator=(const FinishComputeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishComputeRequest& default_instance();

  static inline const FinishComputeRequest* internal_default_instance() {
    return reinterpret_cast<const FinishComputeRequest*>(
               &_FinishComputeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(FinishComputeRequest* other);

  // implements Message ----------------------------------------------

  inline FinishComputeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FinishComputeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinishComputeRequest& from);
  void MergeFrom(const FinishComputeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinishComputeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dpe.Variants result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  const ::dpe::Variants& result() const;
  ::dpe::Variants* mutable_result();
  ::dpe::Variants* release_result();
  void set_allocated_result(::dpe::Variants* result);

  // optional int64 task_id = 1;
  bool has_task_id() const;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::int64 task_id() const;
  void set_task_id(::google::protobuf::int64 value);

  // optional int64 time_usage = 3 [default = 0];
  bool has_time_usage() const;
  void clear_time_usage();
  static const int kTimeUsageFieldNumber = 3;
  ::google::protobuf::int64 time_usage() const;
  void set_time_usage(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:dpe.FinishComputeRequest)
 private:
  void set_has_task_id();
  void clear_has_task_id();
  void set_has_result();
  void clear_has_result();
  void set_has_time_usage();
  void clear_has_time_usage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::dpe::Variants* result_;
  ::google::protobuf::int64 task_id_;
  ::google::protobuf::int64 time_usage_;
  friend struct protobuf_dpe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateWorkerStatusRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dpe.UpdateWorkerStatusRequest) */ {
 public:
  UpdateWorkerStatusRequest();
  virtual ~UpdateWorkerStatusRequest();

  UpdateWorkerStatusRequest(const UpdateWorkerStatusRequest& from);

  inline UpdateWorkerStatusRequest& operator=(const UpdateWorkerStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateWorkerStatusRequest& default_instance();

  static inline const UpdateWorkerStatusRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateWorkerStatusRequest*>(
               &_UpdateWorkerStatusRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(UpdateWorkerStatusRequest* other);

  // implements Message ----------------------------------------------

  inline UpdateWorkerStatusRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateWorkerStatusRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateWorkerStatusRequest& from);
  void MergeFrom(const UpdateWorkerStatusRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateWorkerStatusRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 running_task_id = 1;
  bool has_running_task_id() const;
  void clear_running_task_id();
  static const int kRunningTaskIdFieldNumber = 1;
  ::google::protobuf::int64 running_task_id() const;
  void set_running_task_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:dpe.UpdateWorkerStatusRequest)
 private:
  void set_has_running_task_id();
  void clear_has_running_task_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 running_task_id_;
  friend struct protobuf_dpe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dpe.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .dpe.ConnectRequest connect = 300;
  bool has_connect() const;
  void clear_connect();
  static const int kConnectFieldNumber = 300;
  const ::dpe::ConnectRequest& connect() const;
  ::dpe::ConnectRequest* mutable_connect();
  ::dpe::ConnectRequest* release_connect();
  void set_allocated_connect(::dpe::ConnectRequest* connect);

  // optional .dpe.DisconnectRequest disconnect = 301;
  bool has_disconnect() const;
  void clear_disconnect();
  static const int kDisconnectFieldNumber = 301;
  const ::dpe::DisconnectRequest& disconnect() const;
  ::dpe::DisconnectRequest* mutable_disconnect();
  ::dpe::DisconnectRequest* release_disconnect();
  void set_allocated_disconnect(::dpe::DisconnectRequest* disconnect);

  // optional .dpe.ComputeRequest compute = 302;
  bool has_compute() const;
  void clear_compute();
  static const int kComputeFieldNumber = 302;
  const ::dpe::ComputeRequest& compute() const;
  ::dpe::ComputeRequest* mutable_compute();
  ::dpe::ComputeRequest* release_compute();
  void set_allocated_compute(::dpe::ComputeRequest* compute);

  // optional .dpe.FinishComputeRequest finish_compute = 303;
  bool has_finish_compute() const;
  void clear_finish_compute();
  static const int kFinishComputeFieldNumber = 303;
  const ::dpe::FinishComputeRequest& finish_compute() const;
  ::dpe::FinishComputeRequest* mutable_finish_compute();
  ::dpe::FinishComputeRequest* release_finish_compute();
  void set_allocated_finish_compute(::dpe::FinishComputeRequest* finish_compute);

  // optional .dpe.UpdateWorkerStatusRequest update_worker_status = 304;
  bool has_update_worker_status() const;
  void clear_update_worker_status();
  static const int kUpdateWorkerStatusFieldNumber = 304;
  const ::dpe::UpdateWorkerStatusRequest& update_worker_status() const;
  ::dpe::UpdateWorkerStatusRequest* mutable_update_worker_status();
  ::dpe::UpdateWorkerStatusRequest* release_update_worker_status();
  void set_allocated_update_worker_status(::dpe::UpdateWorkerStatusRequest* update_worker_status);

  // optional int64 connection_id = 2 [default = 0];
  bool has_connection_id() const;
  void clear_connection_id();
  static const int kConnectionIdFieldNumber = 2;
  ::google::protobuf::int64 connection_id() const;
  void set_connection_id(::google::protobuf::int64 value);

  // optional int64 request_id = 3 [default = 0];
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::int64 request_id() const;
  void set_request_id(::google::protobuf::int64 value);

  // optional int64 timestamp = 100 [default = 0];
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 100;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:dpe.Request)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_connection_id();
  void clear_has_connection_id();
  void set_has_request_id();
  void clear_has_request_id();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_connect();
  void clear_has_connect();
  void set_has_disconnect();
  void clear_has_disconnect();
  void set_has_compute();
  void clear_has_compute();
  void set_has_finish_compute();
  void clear_has_finish_compute();
  void set_has_update_worker_status();
  void clear_has_update_worker_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::dpe::ConnectRequest* connect_;
  ::dpe::DisconnectRequest* disconnect_;
  ::dpe::ComputeRequest* compute_;
  ::dpe::FinishComputeRequest* finish_compute_;
  ::dpe::UpdateWorkerStatusRequest* update_worker_status_;
  ::google::protobuf::int64 connection_id_;
  ::google::protobuf::int64 request_id_;
  ::google::protobuf::int64 timestamp_;
  friend struct protobuf_dpe_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dpe.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .dpe.ConnectResponse connect = 300;
  bool has_connect() const;
  void clear_connect();
  static const int kConnectFieldNumber = 300;
  const ::dpe::ConnectResponse& connect() const;
  ::dpe::ConnectResponse* mutable_connect();
  ::dpe::ConnectResponse* release_connect();
  void set_allocated_connect(::dpe::ConnectResponse* connect);

  // optional int64 error_code = 2;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  ::google::protobuf::int64 error_code() const;
  void set_error_code(::google::protobuf::int64 value);

  // optional int64 timestamp = 100 [default = 0];
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 100;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // optional int64 request_timestamp = 200 [default = 0];
  bool has_request_timestamp() const;
  void clear_request_timestamp();
  static const int kRequestTimestampFieldNumber = 200;
  ::google::protobuf::int64 request_timestamp() const;
  void set_request_timestamp(::google::protobuf::int64 value);

  // optional int64 request_id = 201 [default = 0];
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 201;
  ::google::protobuf::int64 request_id() const;
  void set_request_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:dpe.Response)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_error_code();
  void clear_has_error_code();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_request_timestamp();
  void clear_has_request_timestamp();
  void set_has_request_id();
  void clear_has_request_id();
  void set_has_connect();
  void clear_has_connect();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::dpe::ConnectResponse* connect_;
  ::google::protobuf::int64 error_code_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int64 request_timestamp_;
  ::google::protobuf::int64 request_id_;
  friend struct protobuf_dpe_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Variant

// optional int64 value_int64 = 1;
inline bool Variant::has_value_int64() const {
  return value_case() == kValueInt64;
}
inline void Variant::set_has_value_int64() {
  _oneof_case_[0] = kValueInt64;
}
inline void Variant::clear_value_int64() {
  if (has_value_int64()) {
    value_.value_int64_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 Variant::value_int64() const {
  // @@protoc_insertion_point(field_get:dpe.Variant.value_int64)
  if (has_value_int64()) {
    return value_.value_int64_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Variant::set_value_int64(::google::protobuf::int64 value) {
  if (!has_value_int64()) {
    clear_value();
    set_has_value_int64();
  }
  value_.value_int64_ = value;
  // @@protoc_insertion_point(field_set:dpe.Variant.value_int64)
}

// optional string value_string = 2;
inline bool Variant::has_value_string() const {
  return value_case() == kValueString;
}
inline void Variant::set_has_value_string() {
  _oneof_case_[0] = kValueString;
}
inline void Variant::clear_value_string() {
  if (has_value_string()) {
    value_.value_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& Variant::value_string() const {
  // @@protoc_insertion_point(field_get:dpe.Variant.value_string)
  if (has_value_string()) {
    return value_.value_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Variant::set_value_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dpe.Variant.value_string)
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dpe.Variant.value_string)
}
#if LANG_CXX11
inline void Variant::set_value_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:dpe.Variant.value_string)
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dpe.Variant.value_string)
}
#endif
inline void Variant::set_value_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dpe.Variant.value_string)
}
inline void Variant::set_value_string(const char* value, size_t size) {
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dpe.Variant.value_string)
}
inline ::std::string* Variant::mutable_value_string() {
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:dpe.Variant.value_string)
  return value_.value_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Variant::release_value_string() {
  // @@protoc_insertion_point(field_release:dpe.Variant.value_string)
  if (has_value_string()) {
    clear_has_value();
    return value_.value_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Variant::set_allocated_value_string(::std::string* value_string) {
  if (!has_value_string()) {
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (value_string != NULL) {
    set_has_value_string();
    value_.value_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        value_string);
  }
  // @@protoc_insertion_point(field_set_allocated:dpe.Variant.value_string)
}

inline bool Variant::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Variant::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Variant::ValueCase Variant::value_case() const {
  return Variant::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Variants

// repeated .dpe.Variant element = 1;
inline int Variants::element_size() const {
  return element_.size();
}
inline void Variants::clear_element() {
  element_.Clear();
}
inline const ::dpe::Variant& Variants::element(int index) const {
  // @@protoc_insertion_point(field_get:dpe.Variants.element)
  return element_.Get(index);
}
inline ::dpe::Variant* Variants::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:dpe.Variants.element)
  return element_.Mutable(index);
}
inline ::dpe::Variant* Variants::add_element() {
  // @@protoc_insertion_point(field_add:dpe.Variants.element)
  return element_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dpe::Variant >*
Variants::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:dpe.Variants.element)
  return &element_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dpe::Variant >&
Variants::element() const {
  // @@protoc_insertion_point(field_list:dpe.Variants.element)
  return element_;
}

// -------------------------------------------------------------------

// ConnectRequest

// optional string address = 1;
inline bool ConnectRequest::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectRequest::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectRequest::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectRequest::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& ConnectRequest::address() const {
  // @@protoc_insertion_point(field_get:dpe.ConnectRequest.address)
  return address_.GetNoArena();
}
inline void ConnectRequest::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dpe.ConnectRequest.address)
}
#if LANG_CXX11
inline void ConnectRequest::set_address(::std::string&& value) {
  set_has_address();
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dpe.ConnectRequest.address)
}
#endif
inline void ConnectRequest::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dpe.ConnectRequest.address)
}
inline void ConnectRequest::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dpe.ConnectRequest.address)
}
inline ::std::string* ConnectRequest::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:dpe.ConnectRequest.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectRequest::release_address() {
  // @@protoc_insertion_point(field_release:dpe.ConnectRequest.address)
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectRequest::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:dpe.ConnectRequest.address)
}

// -------------------------------------------------------------------

// ConnectResponse

// optional int64 connection_id = 1;
inline bool ConnectResponse::has_connection_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConnectResponse::set_has_connection_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConnectResponse::clear_has_connection_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConnectResponse::clear_connection_id() {
  connection_id_ = GOOGLE_LONGLONG(0);
  clear_has_connection_id();
}
inline ::google::protobuf::int64 ConnectResponse::connection_id() const {
  // @@protoc_insertion_point(field_get:dpe.ConnectResponse.connection_id)
  return connection_id_;
}
inline void ConnectResponse::set_connection_id(::google::protobuf::int64 value) {
  set_has_connection_id();
  connection_id_ = value;
  // @@protoc_insertion_point(field_set:dpe.ConnectResponse.connection_id)
}

// -------------------------------------------------------------------

// DisconnectRequest

// optional string address = 1;
inline bool DisconnectRequest::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DisconnectRequest::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DisconnectRequest::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DisconnectRequest::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& DisconnectRequest::address() const {
  // @@protoc_insertion_point(field_get:dpe.DisconnectRequest.address)
  return address_.GetNoArena();
}
inline void DisconnectRequest::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dpe.DisconnectRequest.address)
}
#if LANG_CXX11
inline void DisconnectRequest::set_address(::std::string&& value) {
  set_has_address();
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dpe.DisconnectRequest.address)
}
#endif
inline void DisconnectRequest::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dpe.DisconnectRequest.address)
}
inline void DisconnectRequest::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dpe.DisconnectRequest.address)
}
inline ::std::string* DisconnectRequest::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:dpe.DisconnectRequest.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DisconnectRequest::release_address() {
  // @@protoc_insertion_point(field_release:dpe.DisconnectRequest.address)
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DisconnectRequest::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:dpe.DisconnectRequest.address)
}

// -------------------------------------------------------------------

// ComputeRequest

// optional int64 task_id = 1;
inline bool ComputeRequest::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComputeRequest::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComputeRequest::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComputeRequest::clear_task_id() {
  task_id_ = GOOGLE_LONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::int64 ComputeRequest::task_id() const {
  // @@protoc_insertion_point(field_get:dpe.ComputeRequest.task_id)
  return task_id_;
}
inline void ComputeRequest::set_task_id(::google::protobuf::int64 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:dpe.ComputeRequest.task_id)
}

// -------------------------------------------------------------------

// FinishComputeRequest

// optional int64 task_id = 1;
inline bool FinishComputeRequest::has_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FinishComputeRequest::set_has_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FinishComputeRequest::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FinishComputeRequest::clear_task_id() {
  task_id_ = GOOGLE_LONGLONG(0);
  clear_has_task_id();
}
inline ::google::protobuf::int64 FinishComputeRequest::task_id() const {
  // @@protoc_insertion_point(field_get:dpe.FinishComputeRequest.task_id)
  return task_id_;
}
inline void FinishComputeRequest::set_task_id(::google::protobuf::int64 value) {
  set_has_task_id();
  task_id_ = value;
  // @@protoc_insertion_point(field_set:dpe.FinishComputeRequest.task_id)
}

// optional .dpe.Variants result = 2;
inline bool FinishComputeRequest::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FinishComputeRequest::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FinishComputeRequest::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FinishComputeRequest::clear_result() {
  if (result_ != NULL) result_->::dpe::Variants::Clear();
  clear_has_result();
}
inline const ::dpe::Variants& FinishComputeRequest::result() const {
  // @@protoc_insertion_point(field_get:dpe.FinishComputeRequest.result)
  return result_ != NULL ? *result_
                         : *::dpe::Variants::internal_default_instance();
}
inline ::dpe::Variants* FinishComputeRequest::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::dpe::Variants;
  }
  // @@protoc_insertion_point(field_mutable:dpe.FinishComputeRequest.result)
  return result_;
}
inline ::dpe::Variants* FinishComputeRequest::release_result() {
  // @@protoc_insertion_point(field_release:dpe.FinishComputeRequest.result)
  clear_has_result();
  ::dpe::Variants* temp = result_;
  result_ = NULL;
  return temp;
}
inline void FinishComputeRequest::set_allocated_result(::dpe::Variants* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:dpe.FinishComputeRequest.result)
}

// optional int64 time_usage = 3 [default = 0];
inline bool FinishComputeRequest::has_time_usage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FinishComputeRequest::set_has_time_usage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FinishComputeRequest::clear_has_time_usage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FinishComputeRequest::clear_time_usage() {
  time_usage_ = GOOGLE_LONGLONG(0);
  clear_has_time_usage();
}
inline ::google::protobuf::int64 FinishComputeRequest::time_usage() const {
  // @@protoc_insertion_point(field_get:dpe.FinishComputeRequest.time_usage)
  return time_usage_;
}
inline void FinishComputeRequest::set_time_usage(::google::protobuf::int64 value) {
  set_has_time_usage();
  time_usage_ = value;
  // @@protoc_insertion_point(field_set:dpe.FinishComputeRequest.time_usage)
}

// -------------------------------------------------------------------

// UpdateWorkerStatusRequest

// optional int64 running_task_id = 1;
inline bool UpdateWorkerStatusRequest::has_running_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateWorkerStatusRequest::set_has_running_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateWorkerStatusRequest::clear_has_running_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateWorkerStatusRequest::clear_running_task_id() {
  running_task_id_ = GOOGLE_LONGLONG(0);
  clear_has_running_task_id();
}
inline ::google::protobuf::int64 UpdateWorkerStatusRequest::running_task_id() const {
  // @@protoc_insertion_point(field_get:dpe.UpdateWorkerStatusRequest.running_task_id)
  return running_task_id_;
}
inline void UpdateWorkerStatusRequest::set_running_task_id(::google::protobuf::int64 value) {
  set_has_running_task_id();
  running_task_id_ = value;
  // @@protoc_insertion_point(field_set:dpe.UpdateWorkerStatusRequest.running_task_id)
}

// -------------------------------------------------------------------

// Request

// optional string name = 1;
inline bool Request::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Request::name() const {
  // @@protoc_insertion_point(field_get:dpe.Request.name)
  return name_.GetNoArena();
}
inline void Request::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dpe.Request.name)
}
#if LANG_CXX11
inline void Request::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dpe.Request.name)
}
#endif
inline void Request::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dpe.Request.name)
}
inline void Request::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dpe.Request.name)
}
inline ::std::string* Request::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dpe.Request.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_name() {
  // @@protoc_insertion_point(field_release:dpe.Request.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dpe.Request.name)
}

// optional int64 connection_id = 2 [default = 0];
inline bool Request::has_connection_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Request::set_has_connection_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Request::clear_has_connection_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Request::clear_connection_id() {
  connection_id_ = GOOGLE_LONGLONG(0);
  clear_has_connection_id();
}
inline ::google::protobuf::int64 Request::connection_id() const {
  // @@protoc_insertion_point(field_get:dpe.Request.connection_id)
  return connection_id_;
}
inline void Request::set_connection_id(::google::protobuf::int64 value) {
  set_has_connection_id();
  connection_id_ = value;
  // @@protoc_insertion_point(field_set:dpe.Request.connection_id)
}

// optional int64 request_id = 3 [default = 0];
inline bool Request::has_request_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Request::set_has_request_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Request::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Request::clear_request_id() {
  request_id_ = GOOGLE_LONGLONG(0);
  clear_has_request_id();
}
inline ::google::protobuf::int64 Request::request_id() const {
  // @@protoc_insertion_point(field_get:dpe.Request.request_id)
  return request_id_;
}
inline void Request::set_request_id(::google::protobuf::int64 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:dpe.Request.request_id)
}

// optional int64 timestamp = 100 [default = 0];
inline bool Request::has_timestamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Request::set_has_timestamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Request::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Request::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Request::timestamp() const {
  // @@protoc_insertion_point(field_get:dpe.Request.timestamp)
  return timestamp_;
}
inline void Request::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:dpe.Request.timestamp)
}

// optional .dpe.ConnectRequest connect = 300;
inline bool Request::has_connect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_connect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_connect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_connect() {
  if (connect_ != NULL) connect_->::dpe::ConnectRequest::Clear();
  clear_has_connect();
}
inline const ::dpe::ConnectRequest& Request::connect() const {
  // @@protoc_insertion_point(field_get:dpe.Request.connect)
  return connect_ != NULL ? *connect_
                         : *::dpe::ConnectRequest::internal_default_instance();
}
inline ::dpe::ConnectRequest* Request::mutable_connect() {
  set_has_connect();
  if (connect_ == NULL) {
    connect_ = new ::dpe::ConnectRequest;
  }
  // @@protoc_insertion_point(field_mutable:dpe.Request.connect)
  return connect_;
}
inline ::dpe::ConnectRequest* Request::release_connect() {
  // @@protoc_insertion_point(field_release:dpe.Request.connect)
  clear_has_connect();
  ::dpe::ConnectRequest* temp = connect_;
  connect_ = NULL;
  return temp;
}
inline void Request::set_allocated_connect(::dpe::ConnectRequest* connect) {
  delete connect_;
  connect_ = connect;
  if (connect) {
    set_has_connect();
  } else {
    clear_has_connect();
  }
  // @@protoc_insertion_point(field_set_allocated:dpe.Request.connect)
}

// optional .dpe.DisconnectRequest disconnect = 301;
inline bool Request::has_disconnect() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_disconnect() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_disconnect() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_disconnect() {
  if (disconnect_ != NULL) disconnect_->::dpe::DisconnectRequest::Clear();
  clear_has_disconnect();
}
inline const ::dpe::DisconnectRequest& Request::disconnect() const {
  // @@protoc_insertion_point(field_get:dpe.Request.disconnect)
  return disconnect_ != NULL ? *disconnect_
                         : *::dpe::DisconnectRequest::internal_default_instance();
}
inline ::dpe::DisconnectRequest* Request::mutable_disconnect() {
  set_has_disconnect();
  if (disconnect_ == NULL) {
    disconnect_ = new ::dpe::DisconnectRequest;
  }
  // @@protoc_insertion_point(field_mutable:dpe.Request.disconnect)
  return disconnect_;
}
inline ::dpe::DisconnectRequest* Request::release_disconnect() {
  // @@protoc_insertion_point(field_release:dpe.Request.disconnect)
  clear_has_disconnect();
  ::dpe::DisconnectRequest* temp = disconnect_;
  disconnect_ = NULL;
  return temp;
}
inline void Request::set_allocated_disconnect(::dpe::DisconnectRequest* disconnect) {
  delete disconnect_;
  disconnect_ = disconnect;
  if (disconnect) {
    set_has_disconnect();
  } else {
    clear_has_disconnect();
  }
  // @@protoc_insertion_point(field_set_allocated:dpe.Request.disconnect)
}

// optional .dpe.ComputeRequest compute = 302;
inline bool Request::has_compute() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request::set_has_compute() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request::clear_has_compute() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request::clear_compute() {
  if (compute_ != NULL) compute_->::dpe::ComputeRequest::Clear();
  clear_has_compute();
}
inline const ::dpe::ComputeRequest& Request::compute() const {
  // @@protoc_insertion_point(field_get:dpe.Request.compute)
  return compute_ != NULL ? *compute_
                         : *::dpe::ComputeRequest::internal_default_instance();
}
inline ::dpe::ComputeRequest* Request::mutable_compute() {
  set_has_compute();
  if (compute_ == NULL) {
    compute_ = new ::dpe::ComputeRequest;
  }
  // @@protoc_insertion_point(field_mutable:dpe.Request.compute)
  return compute_;
}
inline ::dpe::ComputeRequest* Request::release_compute() {
  // @@protoc_insertion_point(field_release:dpe.Request.compute)
  clear_has_compute();
  ::dpe::ComputeRequest* temp = compute_;
  compute_ = NULL;
  return temp;
}
inline void Request::set_allocated_compute(::dpe::ComputeRequest* compute) {
  delete compute_;
  compute_ = compute;
  if (compute) {
    set_has_compute();
  } else {
    clear_has_compute();
  }
  // @@protoc_insertion_point(field_set_allocated:dpe.Request.compute)
}

// optional .dpe.FinishComputeRequest finish_compute = 303;
inline bool Request::has_finish_compute() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request::set_has_finish_compute() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request::clear_has_finish_compute() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request::clear_finish_compute() {
  if (finish_compute_ != NULL) finish_compute_->::dpe::FinishComputeRequest::Clear();
  clear_has_finish_compute();
}
inline const ::dpe::FinishComputeRequest& Request::finish_compute() const {
  // @@protoc_insertion_point(field_get:dpe.Request.finish_compute)
  return finish_compute_ != NULL ? *finish_compute_
                         : *::dpe::FinishComputeRequest::internal_default_instance();
}
inline ::dpe::FinishComputeRequest* Request::mutable_finish_compute() {
  set_has_finish_compute();
  if (finish_compute_ == NULL) {
    finish_compute_ = new ::dpe::FinishComputeRequest;
  }
  // @@protoc_insertion_point(field_mutable:dpe.Request.finish_compute)
  return finish_compute_;
}
inline ::dpe::FinishComputeRequest* Request::release_finish_compute() {
  // @@protoc_insertion_point(field_release:dpe.Request.finish_compute)
  clear_has_finish_compute();
  ::dpe::FinishComputeRequest* temp = finish_compute_;
  finish_compute_ = NULL;
  return temp;
}
inline void Request::set_allocated_finish_compute(::dpe::FinishComputeRequest* finish_compute) {
  delete finish_compute_;
  finish_compute_ = finish_compute;
  if (finish_compute) {
    set_has_finish_compute();
  } else {
    clear_has_finish_compute();
  }
  // @@protoc_insertion_point(field_set_allocated:dpe.Request.finish_compute)
}

// optional .dpe.UpdateWorkerStatusRequest update_worker_status = 304;
inline bool Request::has_update_worker_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request::set_has_update_worker_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request::clear_has_update_worker_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request::clear_update_worker_status() {
  if (update_worker_status_ != NULL) update_worker_status_->::dpe::UpdateWorkerStatusRequest::Clear();
  clear_has_update_worker_status();
}
inline const ::dpe::UpdateWorkerStatusRequest& Request::update_worker_status() const {
  // @@protoc_insertion_point(field_get:dpe.Request.update_worker_status)
  return update_worker_status_ != NULL ? *update_worker_status_
                         : *::dpe::UpdateWorkerStatusRequest::internal_default_instance();
}
inline ::dpe::UpdateWorkerStatusRequest* Request::mutable_update_worker_status() {
  set_has_update_worker_status();
  if (update_worker_status_ == NULL) {
    update_worker_status_ = new ::dpe::UpdateWorkerStatusRequest;
  }
  // @@protoc_insertion_point(field_mutable:dpe.Request.update_worker_status)
  return update_worker_status_;
}
inline ::dpe::UpdateWorkerStatusRequest* Request::release_update_worker_status() {
  // @@protoc_insertion_point(field_release:dpe.Request.update_worker_status)
  clear_has_update_worker_status();
  ::dpe::UpdateWorkerStatusRequest* temp = update_worker_status_;
  update_worker_status_ = NULL;
  return temp;
}
inline void Request::set_allocated_update_worker_status(::dpe::UpdateWorkerStatusRequest* update_worker_status) {
  delete update_worker_status_;
  update_worker_status_ = update_worker_status;
  if (update_worker_status) {
    set_has_update_worker_status();
  } else {
    clear_has_update_worker_status();
  }
  // @@protoc_insertion_point(field_set_allocated:dpe.Request.update_worker_status)
}

// -------------------------------------------------------------------

// Response

// optional string name = 1;
inline bool Response::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Response::name() const {
  // @@protoc_insertion_point(field_get:dpe.Response.name)
  return name_.GetNoArena();
}
inline void Response::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:dpe.Response.name)
}
#if LANG_CXX11
inline void Response::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:dpe.Response.name)
}
#endif
inline void Response::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:dpe.Response.name)
}
inline void Response::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:dpe.Response.name)
}
inline ::std::string* Response::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:dpe.Response.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_name() {
  // @@protoc_insertion_point(field_release:dpe.Response.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:dpe.Response.name)
}

// optional int64 error_code = 2;
inline bool Response::has_error_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_error_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_error_code() {
  error_code_ = GOOGLE_LONGLONG(0);
  clear_has_error_code();
}
inline ::google::protobuf::int64 Response::error_code() const {
  // @@protoc_insertion_point(field_get:dpe.Response.error_code)
  return error_code_;
}
inline void Response::set_error_code(::google::protobuf::int64 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:dpe.Response.error_code)
}

// optional int64 timestamp = 100 [default = 0];
inline bool Response::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Response::timestamp() const {
  // @@protoc_insertion_point(field_get:dpe.Response.timestamp)
  return timestamp_;
}
inline void Response::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:dpe.Response.timestamp)
}

// optional int64 request_timestamp = 200 [default = 0];
inline bool Response::has_request_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Response::set_has_request_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Response::clear_has_request_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Response::clear_request_timestamp() {
  request_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_request_timestamp();
}
inline ::google::protobuf::int64 Response::request_timestamp() const {
  // @@protoc_insertion_point(field_get:dpe.Response.request_timestamp)
  return request_timestamp_;
}
inline void Response::set_request_timestamp(::google::protobuf::int64 value) {
  set_has_request_timestamp();
  request_timestamp_ = value;
  // @@protoc_insertion_point(field_set:dpe.Response.request_timestamp)
}

// optional int64 request_id = 201 [default = 0];
inline bool Response::has_request_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Response::set_has_request_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Response::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Response::clear_request_id() {
  request_id_ = GOOGLE_LONGLONG(0);
  clear_has_request_id();
}
inline ::google::protobuf::int64 Response::request_id() const {
  // @@protoc_insertion_point(field_get:dpe.Response.request_id)
  return request_id_;
}
inline void Response::set_request_id(::google::protobuf::int64 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:dpe.Response.request_id)
}

// optional .dpe.ConnectResponse connect = 300;
inline bool Response::has_connect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_connect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_connect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_connect() {
  if (connect_ != NULL) connect_->::dpe::ConnectResponse::Clear();
  clear_has_connect();
}
inline const ::dpe::ConnectResponse& Response::connect() const {
  // @@protoc_insertion_point(field_get:dpe.Response.connect)
  return connect_ != NULL ? *connect_
                         : *::dpe::ConnectResponse::internal_default_instance();
}
inline ::dpe::ConnectResponse* Response::mutable_connect() {
  set_has_connect();
  if (connect_ == NULL) {
    connect_ = new ::dpe::ConnectResponse;
  }
  // @@protoc_insertion_point(field_mutable:dpe.Response.connect)
  return connect_;
}
inline ::dpe::ConnectResponse* Response::release_connect() {
  // @@protoc_insertion_point(field_release:dpe.Response.connect)
  clear_has_connect();
  ::dpe::ConnectResponse* temp = connect_;
  connect_ = NULL;
  return temp;
}
inline void Response::set_allocated_connect(::dpe::ConnectResponse* connect) {
  delete connect_;
  connect_ = connect;
  if (connect) {
    set_has_connect();
  } else {
    clear_has_connect();
  }
  // @@protoc_insertion_point(field_set_allocated:dpe.Response.connect)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace dpe

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dpe_2eproto__INCLUDED
